swagger: "2.0"
info:
  title: "ChosenOne API"
  version: "v1"
basePath: "/api/v1"
schemes:
  - https
paths:
  "/user/{id}/":
    parameters:
      - name: "id"
        in: "path"
        description: "ID of the user"
        required: true
        type: "string"

    get:
      tags:
      - "user"
      summary: "Get user info"
      parameters: []
      responses:
        200:
          description: "Succesfully retreived user info"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "User not found"

    patch:
      tags:
      - "user"
      summary: "Partially update user info"
      parameters:
      - name: "data"
        in: "body"
        required: true
        schema:
          "$ref": "#/definitions/User"
      responses:
        200:
          description: "Successfully updated user info"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "Unauthorized"
        403:
          description: "Trying to update another user"

  "/user/{id}/profile-image/":
    parameters:
      - name: "id"
        in: "path"
        description: "ID of the user"
        required: true
        type: "string"

    put:
      tags:
      - "user"
      summary: "Update user profile image"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "image"
        in: "formData"
        type: "file"
      responses:
        204:
          description: "Profile picture updated"
        401:
          description: "Unauthorized"
        403:
          description: "Trying to update another user's picture"

  "/images/":
    post:
      tags:
      - "images"
      summary: "Upload image to gallery"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "image"
        in: "formData"
        type: "file"
      responses:
        201:
          description: "Image uploaded"
        401:
          description: "Unauthorized"

  "/images/{id}/":
    parameters:
      - name: "id"
        in: "path"
        description: "ID of the image"
        required: true
        type: "string"

    delete:
      tags:
      - "images"
      summary: "Delete image"
      responses:
        204:
          description: "Successfully deleted image"
        401:
          description: "Unauthorized"
        403:
          description: "Trying to delete another user's image"

  "/matches/":
    get:
      tags:
      - "matches"
      summary: "Get matches for referring user"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/GetMatchesReply"
        401:
          description: "Unauthorized"


definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
        readOnly: true
      name:
        type: "string"
      profilePic:
        type: "string"
      bio:
        type: "string"

  Image:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "user_uploaded_image"
        - "profile_image"
      ownerId:
        type: "string"
      labels:
        type: "array"
        items:
          type: "object"
          properties:
            name:
              type: "string"
            score:
              type: "number"
              format: "float"
  GetMatchesReply:
    type: "object"
    properties:
      user_ids:
        type: "array"
        items:
          type: "string"
