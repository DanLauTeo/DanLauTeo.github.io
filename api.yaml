swagger: "2.0"
info:
  title: "ChosenOne API"
  version: "v1"
basePath: "/api/v1"
schemes:
  - https
paths:
  "/user/{id}/":
    parameters:
    - name: "id"
      in: "path"
      description: "ID of the user"
      required: true
      type: "string"

    get:
      tags:
      - "user"
      summary: "Get user info"
      parameters: []
      responses:
        200:
          description: "Succesfully retreived user info"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "User not found"

    patch:
      tags:
      - "user"
      summary: "Partially update user info"
      parameters:
      - name: "data"
        in: "body"
        required: true
        schema:
          "$ref": "#/definitions/User"
      responses:
        200:
          description: "Successfully updated user info"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "Unauthorized"
        403:
          description: "Trying to update another user"

  "/user/{id}/profile-image/":
    parameters:
    - name: "id"
      in: "path"
      description: "ID of the user"
      required: true
      type: "string"

    put:
      tags:
      - "user"
      summary: "Update user profile image"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "image"
        in: "formData"
        type: "file"
      responses:
        204:
          description: "Profile picture updated"
        401:
          description: "Unauthorized"
        403:
          description: "Trying to update another user's picture"

  "/images/":
    post:
      tags:
      - "images"
      summary: "Upload image to gallery"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "image"
        in: "formData"
        type: "file"
      responses:
        201:
          description: "Image uploaded"
        401:
          description: "Unauthorized"

  "/images/{id}/":
    parameters:
    - name: "id"
      in: "path"
      type: integer
      description: "ID of the image"
      required: true

    delete:
      tags:
      - "images"
      summary: "Delete image"
      responses:
        204:
          description: "Successfully deleted image"
        401:
          description: "Unauthorized"
        403:
          description: "Trying to delete another user's image"

  "/matches/":
    get:
      tags:
      - "matches"
      summary: "Get matches for referring user"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/GetMatchesReply"
        401:
          description: "Unauthorized"

  "/chatrooms/":
    get:
      tags:
      - "chatrooms"
      summary: "Get the list of user's chatrooms"
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: "#/definitions/Chatroom"
        401:
          description: "Unauthorized"

    post:
      tags:
        - "chatrooms"
      summary: "Start a chat"
      parameters:
      - name: "data"
        in: body
        schema:
          type: object
          properties:
            requested_user_id:
              type: string
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/Chatroom"
        400:
          description: "User tried to create cratroom with themself"
        401:
          description: "Unauthorized"
        404:
          description: "Requested user does not exist"
        409:
          description: "Chatroom already exists"

  "/chatrooms/{id}/":
    parameters:
      - name: "id"
        in: path
        type: integer
        description: "ID of the chatroom"
        required: true

    get:
      tags:
        - "chatrooms"
      summary: "Get chatroom by id"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/Chatroom"
        401:
          description: "Unauthorized"
        403:
          description: "User doesn't belong to this chatroom"
        404:
          description: "Chatroom not found"

  "/chatrooms/{id}/messages/":
    parameters:
    - name: "id"
      in: path
      type: integer
      description: "ID of the chatroom"
      required: true

    get:
      tags:
      - "messages"
      summary: "Get messages from a chatroom"
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: "#/definitions/Message"
        401:
          description: "Unauthorized"
        403:
          description: "User doesn't belong to this chatroom"
        404:
          description: "Chatroom not found"

    post:
      tags:
        - "messages"
      summary: "Post a message to a chatroom"
      parameters:
      - name: "data"
        in: body
        schema:
          type: object
          properties:
            message:
              type: string
      responses:
        201:
          description: ""
          schema:
            $ref: "#/definitions/Message"
        401:
          description: "Unauthorized"
        403:
          description: "User doesn't belong to this chatroom"
        404:
          description: "Chatroom not found"

  "/messages/{id}/":
    parameters:
    - name: "id"
      in: path
      type: integer
      required: true

    get:
      tags:
      - "messages"
      summary: "Get a message"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/Message"
        403:
          description: "Message doesn't belong to a chatroom, to which the user has access"
        404:
          description: "Message does not exist"

    delete:
      tags:
      - "messages"
      summary: "Delete a message"
      responses:
        204:
          description: "Successfully deleted message"
        401:
          description: "Unauthorized"
        403:
          description: "Message doesn't belong to this user"
        404:
          description: "Message doesn't exist"

  "/feed/":
    get:
      tags:
      - "feed"
      summary: "Get feed posts"
      responses:
          200:
            description: "Succesfully got feed posts"
            schema:
              $ref: "#/definitions/Feed"
          401:
            description: "Unauthorized"

  "/tasks/recalc-user-matches/":
    get:
      tags:
        - "tasks"
      summary: "Recalculate matching backend data"
      description: "This is called by a Cron job"
      responses:
        200:
          description: "Succesfully triggered recalculation"
        403:
          description: "The task is called not by a Cron job"

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
        readOnly: true
      name:
        type: "string"
      profilePic:
        type: "string"
      bio:
        type: "string"

  Image:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "user_uploaded_image"
        - "profile_image"
      owner_id:
        type: "string"
      labels:
        type: "array"
        items:
          type: "object"
          properties:
            name:
              type: "string"
            score:
              type: "number"
              format: "float"

  GetMatchesReply:
    type: "object"
    properties:
      user_ids:
        type: "array"
        items:
          type: "string"

  Message:
    type: object
    properties:
      id:
        type: integer
      chatroom_id:
        type: string
      sender_id:
        type: string
      timestamp:
        type: integer
      body:
        type: string

  Chatroom:
    type: object
    properties:
      id:
        type: integer
      participants:
        type: array
        items:
          type: string
      messages:
        type: array
        items:
          type: integer

  Feed:
    type: object
    properties:
      profile_pic:
        type: string
      owner_id:
        type: string
      image_url:
        type: string
